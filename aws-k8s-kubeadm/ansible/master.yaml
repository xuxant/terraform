---
- hosts: master
  become: yes
  tasks:
    - name: Initialize the master
      shell: "kubeadm init --pod-network-cidr=10.244.0.0/16 --control-plane-endpoint {{ internal_lb_dns }}:6443 --upload-certs >> cluster_bootstraped.txt"
      args:
        chdir: /home/ubuntu
        creates: cluster_bootstraped.txt

    - name: grep the master join command
      shell: "grep -- --control-plane /home/ubuntu/cluster_bootstraped.txt"
      register: certificate

    - name: Grab the cluster joining token
      command: kubeadm token create --print-join-command
      register: join_command

    - name: Set join command for worker
      set_fact:
        join_command_worker: "{{ join_command.stdout_lines[0] }}"

    - name: Apply the Weave net CNI plugin for the cluster
      shell: kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"

    - name: Get the kubeconfig file for bastion host
      shell: kubectl --kubeconfig=/etc/kubernetes/admin.conf config view --minify --flatten
      register: kubeconfig

- hosts: masters
  become: yes
  tasks:
    - name: Set join command for masters
      set_fact:
        join_command_master: "{{ hostvars['master'].join_command.stdout_lines[0]}} {{ hostvars['master'].certificate.stdout }}"

    - name: Join the bootstraping master
      shell: "{{ join_command_master }} >> master_joined.txt"
      args:
        chdir: /home/ubuntu
        creates: master_joined.txt

- hosts: workers
  become: yes
  tasks:
    - name: Set Join command for worker
      set_fact:
        join_command_worker: "{{ hostvars['master'].join_command.stdout_lines[0] }}"

    - name: Join the cluster
      shell: "{{ join_command_worker }}  >> worker_joined.txt"
      args:
        chdir: /home/ubuntu
        creates: worker_joined.txt

- hosts: localhost
  become: yes
  tasks:
    - name: Add apt key for kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Repository for kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Install Kubectl
      apt:
        pkg:
          - kubectl
        state: present
        update_cache: yes

    - name: Create .kube directory
      file:
        path: /home/ubuntu/.kube
        state: directory
        owner: ubuntu
        group: ubuntu

    - name: Save the kubeconfig file
      copy:
        content: "{{ hostvars['master'].kubeconfig.stdout }}"
        dest: /home/ubuntu/.kube/config
        owner: ubuntu

    - name: Download helm binary
      unarchive:
        src: https://get.helm.sh/helm-v3.3.1-linux-amd64.tar.gz
        dest: /usr/local/bin/
        remote_src: yes
